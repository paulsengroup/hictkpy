# Copyright (C) 2024 Roberto Rossini <roberros@uio.no>
# SPDX-License-Identifier: MIT

name: Build dependencies with Conan

on:
  workflow_call:
    outputs:
      conan-key:
        description: "Conan packages"
        value: ${{ jobs.build-deps.outputs.conan-key }}
      conan-home:
        description: "Conan home folder"
        value: ${{ jobs.build-deps.outputs.conan-home }}

    inputs:
      conan-version:
        default: "2.12.*"
        type: string
        required: false
        description: "Conan version to be installed with pip."
      cppstd:
        default: "17"
        type: string
        required: false
        description: "Value to pass to compiler.cppstd."
      os:
        type: string
        required: true
        description: "OS used to build Conan deps."

defaults:
  run:
    shell: bash

jobs:
  build-deps:
    name: Build dependencies with Conan (${{ inputs.os }})
    runs-on: ${{ inputs.os }}

    env:
      CONAN_HOME: "${{ github.workspace }}\\.conan2"

    outputs:
      conan-key: ${{ steps.generate-cache-key.outputs.conan-key }}
      conan-home: ${{ env.CONAN_HOME }}

    steps:
      - uses: actions/checkout@v4

      - name: Add devtools to PATH
        uses: ilammy/msvc-dev-cmd@0b201ec74fa43914dc39ae48a89fd1d8cb592756 # v1.13.0

      - name: Generate cache key
        id: generate-cache-key
        run: |
          set -u
          set -e

          hash="${{ hashFiles('conanfile.py') }}"

          cl.exe 1> /dev/null 2> version.txt
          compiler="msvc-$(head -n 1 version.txt | grep -o '[[:digit:].]\+' | head -n 1)"

          suffix="${{ inputs.os }}-$compiler-c++${{ inputs.cppstd }}-$hash"

          echo "conan-key=conan-$suffix" | tee -a "$GITHUB_OUTPUT"

      - name: Restore package cache
        id: cache-conan
        uses: actions/cache/restore@v4
        with:
          key: ${{ steps.generate-cache-key.outputs.conan-key }}
          path: ${{ env.CONAN_HOME }}\p
          lookup-only: true

      - uses: actions/setup-python@v5
        if: steps.cache-conan.outputs.cache-hit != 'true'
        with:
          python-version: "3.13"

      - name: Update build deps
        if: steps.cache-conan.outputs.cache-hit != 'true'
        run: pip install "conan==${{ inputs.conan-version }}"

      - name: Configure Conan
        if: steps.cache-conan.outputs.cache-hit != 'true'
        run: |
          conan profile detect --force
          conan_profile="$(conan profile path default)"

          sed -i 's/compiler\.cppstd=.*/compiler.cppstd=${{ inputs.cppstd }}/' "$conan_profile"

          conan remote update conancenter --url https://center2.conan.io

      - name: Clean Conan cache (pre-build)
        if: steps.cache-conan.outputs.cache-hit != 'true'
        run: |
          conan cache clean "*" --build
          conan cache clean "*" --download
          conan cache clean "*" --source
          conan remove --confirm "*"

      - name: Install dependencies
        if: steps.cache-conan.outputs.cache-hit != 'true'
        run: |
          conan install conanfile.py                  \
             --build='missing'                        \
             -s build_type=Release                    \
             -s compiler.runtime_type=Release         \
             -s compiler.cppstd=${{ inputs.cppstd }}  \
             --options='*/*:shared=False'

      - name: Clean Conan cache (post-build)
        if: steps.cache-conan.outputs.cache-hit != 'true'
        run: |
          conan cache clean "*" --build
          conan cache clean "*" --download
          conan cache clean "*" --source

      - name: Save Conan cache
        uses: actions/cache/save@v4
        if: steps.cache-conan.outputs.cache-hit != 'true'
        with:
          key: ${{ steps.generate-cache-key.outputs.conan-key }}
          path: ${{ env.CONAN_HOME }}\p
        env:
          ZSTD_CLEVEL: 19
